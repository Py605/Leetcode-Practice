class Solution {
    public List<List<Integer>> fourSum(int[] nums, int target) {
            int n=nums.length;
		 ArrayList<List<Integer>> res=new ArrayList<List<Integer>>();
		 if(nums==null || n==0)
			 return res;
		 Arrays.sort(nums);
		for(int i=0;i<n;i++) {
			for(int j=i+1;j<n;j++) {
				int sum=target-nums[i]-nums[j];
	//And as we already have two values we will search others two values whose sum is equal to sum...
				  int front=j+1,back=n-1;
				   while(front<back) {
					   if(nums[front]+nums[back]<sum)
						   front++;
					   else  if(nums[front]+nums[back]>sum)
						   back--;
					   else
					   {
						   List<Integer> a=new ArrayList();
						   a.add(nums[i]);
						   a.add(nums[j]);
						   a.add(nums[front]);
						   a.add(nums[back]);
                           res.add(a);
 //we don't want duplicate values, so increment and decrement front and back respectively...
						   while(front<back && nums[front]==a.get(2))
							   	++front;
						   while(front<back && nums[back]==a.get(3))
							   	--back;
					   }
				   }
	// And we dont't want j to be counted as duplicates...
				   while(j+1<n && nums[j]==nums[j+1])
					   ++j;
			}
	// And we dont't want i to be counted as duplicates...
			   while(i+1<n && nums[i]==nums[i+1])
				   ++i;
		}
		return res;
		 
    }
}