/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
       boolean count = true;
        List<List<Integer>> ans =new LinkedList<List<Integer>>();
        if(root == null) return ans;
        Queue<TreeNode> queue = new LinkedList<TreeNode>();
        
        queue.add(root);
          while(!queue.isEmpty())
          {
              int n = queue.size();
            List<Integer> a = new ArrayList<Integer>(n);
           
              for(int i=0; i<n; i++) {
                  TreeNode curr = queue.poll();
                if(curr.left != null) 
                    queue.offer(curr.left);
                if(curr.right != null) 
                    queue.offer(curr.right);
                if(count == true) 
                    a.add(curr.val);
                else 
                    a.add(0, curr.val);//displacing all elments left to right....
            }
              ans.add(a);
              count=!count;
          }
        return ans;
    }
}