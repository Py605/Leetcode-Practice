/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
 
    public int diameterOfBinaryTree(TreeNode root) {
        if(root==null) return 0;
        
     int maximum[]=new int[1];
       int yo= maxd(root,maximum);
        return  maximum[0];
    }
    public int maxd(TreeNode root,int[] maximum) {
      if(root ==null)
          return 0;
        int left=(maxd(root.left,maximum));
        int right=maxd(root.right,maximum);
        maximum[0]=Math.max(maximum[0],left+right);
      return (1+Math.max(left,right));
    }
}