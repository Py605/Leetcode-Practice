class Solution {
 	   public static List<String> findAndReplacePattern(String[] words, String pattern) {
		   List<String> answer = new ArrayList();
		   //For Pattern STring..
		   int n = pattern.length();
		   ArrayList<Integer> a =new ArrayList();
		   HashMap<Character,Integer> forPat =new HashMap();
		   int count =0;
		   for(int j=0;j<n;j++) {
			   char temp = pattern.charAt(j);
			   if(forPat.containsKey(temp))
				   a.add(forPat.get(temp));
			   else
			   {
				   count++;
				   forPat.put(temp,count);
				   a.add(count);
			   }
		   }
		   //for Word ARray...
		   for(int i=0;i<words.length;i++) {
			   String temp1 =words[i];
			   ArrayList<Integer> b =new ArrayList();
			   HashMap<Character,Integer> forWord =new HashMap();
			   int count1 =0;
			   for(int j=0;j<n;j++) {
				   char temp = temp1.charAt(j);
				   if(forWord.containsKey(temp))
					   b.add(forWord.get(temp));
				   else
				   {
					   count1++;
					   forWord.put(temp,count1);
					   b.add(count1);
				   }
			   }
			   if(listEqualsIgnoreOrder(a,b))
				  answer.add(temp1);		   
			   
		   }		  		   
		   //System.out.println(a);
		   return answer;
	    }
	   public static boolean listEqualsIgnoreOrder(List<Integer> list1, List<Integer> list2) {
		    for(int i=0;i<list1.size();i++) {
		    	if(list1.get(i)!=list2.get(i))
		    		return false;
		    }
		    return true;
		}
}