/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode curr = l1;
        Stack<Integer> stack1 = new Stack();
        Stack<Integer> stack2 = new Stack();
        ListNode temp = null;
        //traversing list1...
        while(curr!=null){
            stack1.push(curr.val);
            curr =curr.next;
        }
        //traversing list2...
        curr = l2;
        while(curr!=null){
            stack2.push(curr.val);
            curr =curr.next;
        }
        int carry = 0;
        while(!stack1.isEmpty() || !stack2.isEmpty()){
            int a=0, b=0;
            if(!stack1.isEmpty())
                a=stack1.pop();
            if(!stack2.isEmpty())
                b=stack2.pop();
            int sum = a+b+carry;
            ListNode original = new ListNode(sum%10);
            carry = sum/10;
            original.next = temp;
            temp=original;
        }
        if(carry!=0){
            ListNode original = new ListNode(carry);
            original.next = temp;
            temp=original;
        }
        
//now adding them...
        return temp;
    }
}